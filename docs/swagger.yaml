openapi: 3.0.0
info:
  title: PlatIAgro Pipelines API
  version: "1.0.0"
  description: >
    These are the docs for PlatIAgro Pipelines API.
    The endpoints below are usually accessed by the PlatIAgro Web-UI.
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8080
tags:
  - name: "Deployments"
    description: >
      Manage deployment pipelines.
  - name: "Trainings"
    description: >
      Manage training pipelines.
paths:
  /deployments:
    get:
      summary: "List all deployments."
      tags:
        - "Deployments"
      responses:
        "200":
          $ref: "#/components/responses/Deployments"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /deployments/{deploymentId}:
    put:
      summary: "Run a deployment pipeline"
      tags:
        - "Deployments"
      parameters:
        - in: path
          name: deploymentId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: "#/components/requestBodies/DeploymentPut"
      responses:
        "200":
          $ref: "#/components/responses/Run"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    get:
      summary: "Get a deployment by uuid."
      tags:
        - "Deployments"
      parameters:
        - in: path
          name: deploymentId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          $ref: "#/components/schemas/DeploymentStatus"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    delete:
      summary: "Delete deployment pipeline."
      tags:
        - "Deployments"
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/DeleteDeployment"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /deployments/{deploymentId}/logs:
    get:
      summary: "Get logs from a deployment."
      tags:
        - "Deployments"
      parameters:
        - name: deploymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/DeploymentLog"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /deployments/terminate/{deploymentId}:
    put:
      summary: "Terminate deployment pipeline"
      tags:
        - "Deployments"
      parameters:
        - in: path
          name: deploymentId
          required: true
          schema:
            type: string
            format: deploymentId
      responses:
        "200":
          $ref: "#/components/schemas/DeploymentStatus"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /deployments/retry/{deploymentId}:
    put:
      summary: "Re-initiate a failed or terminated deployment"
      tags:
        - "Deployments"
      parameters:
        - in: path
          name: deploymentId
          required: true
          schema:
            type: string
            format: deploymentId
      responses:
        "200":
          $ref: "#/components/responses/TerminateRun"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /trainings/{trainingId}:
    put:
      summary: "Run a training pipeline"
      tags:
        - "Trainings"
      parameters:
        - name: trainingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/TrainingPost"
      responses:
        "200":
          $ref: "#/components/responses/Run"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    get:
      summary: "Get the training status of a run."
      tags:
        - "Trainings"
      parameters:
        - name: trainingId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/TrainingStatus"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /trainings/terminate/{trainingId}:
    put:
      summary: "Terminate trainings pipeline"
      tags:
        - "Trainings"
      parameters:
        - in: path
          name: trainingId
          required: true
          schema:
            type: string
            format: trainingId
      responses:
        "200":
          $ref: "#/components/responses/TerminateRun"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
  /trainings/retry/{trainingId}:
    put:
      summary: "Re-initiate a failed or terminated training"
      tags:
        - "Trainings"
      parameters:
        - in: path
          name: trainingId
          required: true
          schema:
            type: string
            format: trainingId
      responses:
        "200":
          $ref: "#/components/responses/TrainingStatus"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

components:
  schemas:
    Run:
      type: object
      properties:
        message:
          type: string
          example: "Pipeline running."
        runId:
          type: string
          format: uuid
    TerminateRun:
      type: object
      properties:
        status:
          type: object
          additionalProperties:
            type: string
          example:
            c9a4e6a05-a788-4efa-b94b-693e28608618: "Failed"
            caadb1d13-0666-4d84-a365-356b258e4433: "Failed"
    Component:
      type: object
      required:
        - operatorId
        - notebookPath
      properties:
        operatorId:
          type: string
          format: uuid
        notebookPath:
          type: string
        parameters:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/Parameter"
    Parameter:
      type: object
      properties:
        name:
          type: string
          example: "time"
        value:
          oneOf:
            - type: string
            - type: number
            - type: integer
            - type: boolean
            - type: array
            - type: object
          example: 8
    Deployments:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentStatus"
    DeploymentStatus:
      type: object
      properties:
        experimentId:
          type: string
          format: uuid
        name:
          type: string
        status:
          type: string
        url:
          type: string
        createdAt:
          type: string
          format: date-time
        runId:
          type: string
          format: uuid
    DeploymentLog:
      type: array
      items:
        type: object
        properties:
          containerName:
            type: string
          logs:
            type: array
            items:
              oneOf:
                - $ref: "#/components/schemas/Log"
    Log:
      type: object
      properties:
        level:
          type: string
        message:
          type: string
        timestamp:
          type: string
    TrainingStatus:
      type: object
      properties:
        status:
          type: object
          additionalProperties:
            type: string
          example:
            c9a4e6a05-a788-4efa-b94b-693e28608618: "Succeeded"
            caadb1d13-0666-4d84-a365-356b258e4433: "Succeeded"
  requestBodies:
    DeploymentPut:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              components:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Component"
    TrainingPost:
      content:
        application/json:
          schema:
            type: object
            properties:
              experimentId:
                type: string
                format: uuid
              components:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Component"
  responses:
    DeploymentLog:
      description: ""
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeploymentLog"
    Run:
      description: ""
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Run"
    TerminateRun:
      description: ""
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TerminateRun"
    Deployments:
      description: ""
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Deployments"
    DeleteDeployment:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Deployment deleted."
    TrainingStatus:
      description: ""
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TrainingStatus"
    Message:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    BadRequest:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    NotFound:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "The specified ... does not exist"
            required:
              - message
    InternalServerError:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "An internal failure occurred."
            required:
              - message
    ServiceUnavailable:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "The service is unavailable. Try your call again."
            required:
              - message
