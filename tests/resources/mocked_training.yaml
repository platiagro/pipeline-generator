apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: common-pipeline-
  annotations:
    { pipelines.kubeflow.org/pipeline_spec: '{"name": "Common pipeline"}' }
spec:
  entrypoint: common-pipeline
  templates:
    - name: common-pipeline
      dag:
        tasks:
          - name: d4560e7e-0a22-425f-9125-19816d060e76
            template: d4560e7e-0a22-425f-9125-19816d060e76
            dependencies: [vol-tmp-data]
            arguments:
              parameters:
                - {
                    name: vol-tmp-data-name,
                    value: "{{tasks.vol-tmp-data.outputs.parameters.vol-tmp-data-name}}",
                  }
          - { name: vol-tmp-data, template: vol-tmp-data }
    - name: d4560e7e-0a22-425f-9125-19816d060e76
      container:
        args: []
        command: [cmd]
        env:
          - { name: EXPERIMENT_ID, value: b281185b-6104-4c8c-8185-31eb53bef8de }
          - { name: OPERATOR_ID, value: d4560e7e-0a22-425f-9125-19816d060e76 }
          - { name: RUN_ID, value: "{{workflow.uid}}" }
        image: platiagro/platiagro-notebook-image:0.2.0
        imagePullPolicy: Always
        resources:
          limits: { memory: 4G, cpu: 2000m }
          requests: { memory: 2G, cpu: 500m }
        volumeMounts:
          - { mountPath: /tmp/data, name: vol-tmp-data }
      inputs:
        parameters:
          - { name: vol-tmp-data-name }
      volumes:
        - name: vol-tmp-data
          persistentVolumeClaim:
            { claimName: "{{inputs.parameters.vol-tmp-data-name}}" }
    - name: vol-tmp-data
      resource:
        action: apply
        manifest: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: vol-b281185b-6104-4c8c-8185-31eb53bef8de
            namespace: deployments
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
      outputs:
        parameters:
          - name: vol-tmp-data-manifest
            valueFrom: { jsonPath: "{}" }
          - name: vol-tmp-data-name
            valueFrom: { jsonPath: "{.metadata.name}" }
          - name: vol-tmp-data-size
            valueFrom: { jsonPath: "{.status.capacity.storage}" }
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
